{
  "openapi": "3.1.0",
  "info": {
    "title": "QBCore/ESX Citizens API",
    "description": "API pour récupérer les informations des citoyens et leurs véhicules dans les frameworks QBCore et ESX",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://votre-domaine.com",
      "description": "Serveur principal (adaptez selon votre déploiement)"
    }
  ],

  "paths": {
    "/qbcore/citizens": {
      "get": {
        "summary": "Récupérer tous les citoyens QBCore",
        "description": "Retourne la liste de tous les citoyens enregistrés dans QBCore",
        "tags": ["QBCore"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre maximum de résultats à retourner",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Nombre de résultats à ignorer",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des citoyens récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QBCoreCitizen"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requête",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/qbcore/citizens/{citizenid}": {
      "get": {
        "summary": "Récupérer un citoyen QBCore par ID",
        "description": "Retourne les informations détaillées d'un citoyen spécifique",
        "tags": ["QBCore"],
        "parameters": [
          {
            "name": "citizenid",
            "in": "path",
            "description": "ID unique du citoyen",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{3}[0-9]{5}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Citoyen trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/QBCoreCitizen"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Citoyen non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/qbcore/citizens/{citizenid}/vehicles": {
      "get": {
        "summary": "Récupérer les véhicules d'un citoyen QBCore",
        "description": "Retourne la liste des véhicules appartenant à un citoyen spécifique",
        "tags": ["QBCore"],
        "parameters": [
          {
            "name": "citizenid",
            "in": "path",
            "description": "ID unique du citoyen",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{3}[0-9]{5}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des véhicules récupérée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vehicle"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Citoyen non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/esx/citizens": {
      "get": {
        "summary": "Récupérer tous les citoyens ESX",
        "description": "Retourne la liste de tous les citoyens enregistrés dans ESX",
        "tags": ["ESX"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre maximum de résultats à retourner",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Nombre de résultats à ignorer",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des citoyens récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ESXCitizen"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requête",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/esx/citizens/{citizenid}": {
      "get": {
        "summary": "Récupérer un citoyen ESX par ID",
        "description": "Retourne les informations détaillées d'un citoyen spécifique",
        "tags": ["ESX"],
        "parameters": [
          {
            "name": "citizenid",
            "in": "path",
            "description": "ID unique du citoyen",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Citoyen trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ESXCitizen"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Citoyen non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/esx/citizens/{citizenid}/vehicles": {
      "get": {
        "summary": "Récupérer les véhicules d'un citoyen ESX",
        "description": "Retourne la liste des véhicules appartenant à un citoyen spécifique",
        "tags": ["ESX"],
        "parameters": [
          {
            "name": "citizenid",
            "in": "path",
            "description": "ID unique du citoyen",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des véhicules récupérée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vehicle"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Citoyen non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "QBCoreCitizen": {
        "type": "object",
        "required": ["id", "citizenid", "license", "name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID unique en base de données"
          },
          "citizenid": {
            "type": "string",
            "description": "ID unique du citoyen (format: ABC12345)",
            "pattern": "^[A-Z]{3}[0-9]{5}$"
          },
          "license": {
            "type": "string",
            "description": "License Steam/FiveM du joueur (ex: license:4bb5858a5781a3e2a12dc7e7a5086b3e0955f6fd)"
          },
          "name": {
            "type": "string",
            "description": "Nom d'utilisateur du joueur"
          },
          "money": {
            "type": "string",
            "description": "Argent en JSON stringifié {\"cash\":9531,\"bank\":16199.0,\"crypto\":0}"
          },
          "charinfo": {
            "type": "string",
            "description": "Informations du personnage en JSON stringifié {\"firstname\":\"James\",\"lastname\":\"Bradford\",\"birthdate\":\"1987-09-24\",\"nationality\":\"Américain\",\"gender\":\"Homme\",\"phone\":\"3256410651\",\"account\":\"US09QBCore2722472099\",\"cid\":\"1\"}"
          },
          "job": {
            "type": "string",
            "description": "Métier en JSON stringifié {\"name\":\"police\",\"label\":\"LSPD\",\"grade\":{\"name\":\"Chef\",\"level\":12,\"payment\":100,\"isboss\":true},\"onduty\":true,\"isboss\":true,\"type\":\"leo\"}"
          },
          "gang": {
            "type": "string",
            "description": "Gang en JSON stringifié {\"name\":\"none\",\"label\":\"No Gang\",\"grade\":{\"name\":\"Unaffiliated\",\"level\":0,\"isboss\":false},\"isboss\":false}"
          },
          "position": {
            "type": "string",
            "description": "Position dans le monde en JSON stringifié {\"x\":462.17,\"y\":-595.46,\"z\":28.48}"
          },
          "metadata": {
            "type": "string",
            "description": "Métadonnées du personnage en JSON stringifié (santé, faim, soif, stress, licences, etc.)"
          },
          "inventory": {
            "type": "string",
            "description": "Inventaire en JSON stringifié avec objets détaillés [{\"name\":\"WEAPON_PISTOL_MK2\",\"count\":1,\"slot\":1,\"metadata\":{\"durability\":98.5,\"ammo\":12}}]"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "description": "Dernière mise à jour du personnage"
          }
        }
      },
      "ESXCitizen": {
        "type": "object",
        "required": ["identifier", "firstname", "lastname"],
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Identifiant unique du citoyen (ex: char1:1c9eefd2d0a6dac378f6f7bdf7339709b5305111)"
          },
          "firstname": {
            "type": "string",
            "description": "Prénom du citoyen"
          },
          "lastname": {
            "type": "string",
            "description": "Nom de famille du citoyen"
          },
          "dateofbirth": {
            "type": "string",
            "format": "date",
            "description": "Date de naissance (YYYY-MM-DD)"
          },
          "sex": {
            "type": "string",
            "enum": ["m", "f"],
            "description": "Sexe du citoyen (m/f)"
          },
          "height": {
            "type": "integer",
            "description": "Taille en centimètres"
          },
          "job": {
            "type": "string",
            "description": "Métier actuel (ex: unemployed, police, ambulance)"
          },
          "job_grade": {
            "type": "integer",
            "description": "Grade du métier"
          },
          "group": {
            "type": "string",
            "description": "Groupe d'utilisateur (ex: user, admin, superadmin)"
          },
          "accounts": {
            "type": "string",
            "description": "Comptes en JSON stringifié {\"money\":650,\"bank\":3800,\"black_money\":0}"
          },
          "inventory": {
            "type": "string",
            "description": "Inventaire en JSON stringifié avec objets [{\"name\":\"item\",\"count\":1,\"slot\":1}]"
          },
          "loadout": {
            "type": "string",
            "description": "Équipement en JSON stringifié"
          },
          "metadata": {
            "type": "string",
            "description": "Métadonnées en JSON stringifié {\"health\":188,\"armor\":0}"
          },
          "position": {
            "type": "string",
            "description": "Position en JSON stringifié {\"x\":-898.6,\"y\":-2400.1,\"z\":14.0}"
          },
          "skin": {
            "type": "string",
            "description": "Apparence du personnage en JSON stringifié (très complexe)"
          },
          "status": {
            "type": "string",
            "description": "Statuts en JSON stringifié [{\"name\":\"hunger\",\"val\":559225,\"percent\":55.9}]"
          },
          "is_dead": {
            "type": "boolean",
            "description": "Indique si le citoyen est mort"
          },
          "disabled": {
            "type": "boolean",
            "description": "Indique si le compte est désactivé"
          },
          "last_property": {
            "type": "string",
            "nullable": true,
            "description": "Dernière propriété visitée"
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "description": "Numéro de téléphone du citoyen"
          }
        }
      },
      "Vehicle": {
        "type": "object",
        "required": ["plate", "model"],
        "properties": {
          "plate": {
            "type": "string",
            "description": "Plaque d'immatriculation du véhicule"
          },
          "model": {
            "type": "string",
            "description": "Modèle du véhicule"
          },
          "garage": {
            "type": "string",
            "description": "Garage où est stocké le véhicule"
          },
          "state": {
            "type": "integer",
            "description": "État du véhicule (0=garage, 1=sorti, 2=fourrière)"
          },
          "fuel": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Niveau de carburant en pourcentage"
          },
          "engine": {
            "type": "number",
            "minimum": 0,
            "maximum": 1000,
            "description": "État du moteur"
          },
          "body": {
            "type": "number",
            "minimum": 0,
            "maximum": 1000,
            "description": "État de la carrosserie"
          }
        }
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32",
            "description": "Code d'erreur"
          },
          "message": {
            "type": "string",
            "description": "Message d'erreur descriptif"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "QBCore",
      "description": "Endpoints pour le framework QBCore"
    },
    {
      "name": "ESX",
      "description": "Endpoints pour le framework ESX"
    }
  ]
}