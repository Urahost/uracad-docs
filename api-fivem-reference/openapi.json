{
  "openapi": "3.1.0",
  "info": {
    "title": "QBCore/ESX Citizens API",
    "description": "API pour récupérer les informations des citoyens et leurs véhicules dans les frameworks QBCore et ESX",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://votre-domaine.com",
      "description": "Serveur principal (adaptez selon votre déploiement)"
    }
  ],

  "paths": {
    "/qbcore/citizens": {
      "get": {
        "summary": "Récupérer tous les citoyens QBCore",
        "description": "Retourne la liste de tous les citoyens enregistrés dans QBCore",
        "tags": ["QBCore"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre maximum de résultats à retourner",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Nombre de résultats à ignorer",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des citoyens récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QBCoreCitizen"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requête",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/qbcore/citizens/{citizenid}": {
      "get": {
        "summary": "Récupérer un citoyen QBCore par ID",
        "description": "Retourne les informations détaillées d'un citoyen spécifique",
        "tags": ["QBCore"],
        "parameters": [
          {
            "name": "citizenid",
            "in": "path",
            "description": "ID unique du citoyen",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{3}[0-9]{5}$",
              "example": "HPP63796"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Citoyen trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/QBCoreCitizen"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Citoyen non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/qbcore/citizens/{citizenid}/vehicles": {
      "get": {
        "summary": "Récupérer les véhicules d'un citoyen QBCore",
        "description": "Retourne la liste des véhicules appartenant à un citoyen spécifique",
        "tags": ["QBCore"],
        "parameters": [
          {
            "name": "citizenid",
            "in": "path",
            "description": "ID unique du citoyen",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{3}[0-9]{5}$",
              "example": "HPP63796"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des véhicules récupérée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vehicle"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Citoyen non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/esx/citizens": {
      "get": {
        "summary": "Récupérer tous les citoyens ESX",
        "description": "Retourne la liste de tous les citoyens enregistrés dans ESX",
        "tags": ["ESX"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre maximum de résultats à retourner",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100,
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Nombre de résultats à ignorer",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des citoyens récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ESXCitizen"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requête",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/esx/citizens/{citizenid}": {
      "get": {
        "summary": "Récupérer un citoyen ESX par ID",
        "description": "Retourne les informations détaillées d'un citoyen spécifique",
        "tags": ["ESX"],
        "parameters": [
          {
            "name": "citizenid",
            "in": "path",
            "description": "ID unique du citoyen",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Citoyen trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ESXCitizen"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Citoyen non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/esx/citizens/{citizenid}/vehicles": {
      "get": {
        "summary": "Récupérer les véhicules d'un citoyen ESX",
        "description": "Retourne la liste des véhicules appartenant à un citoyen spécifique",
        "tags": ["ESX"],
        "parameters": [
          {
            "name": "citizenid",
            "in": "path",
            "description": "ID unique du citoyen",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des véhicules récupérée",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vehicle"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Citoyen non trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "QBCoreCitizen": {
        "type": "object",
        "required": ["id", "citizenid", "license", "name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID unique en base de données"
          },
          "citizenid": {
            "type": "string",
            "description": "ID unique du citoyen (format: HPP63796)",
            "pattern": "^[A-Z]{3}[0-9]{5}$"
          },
          "license": {
            "type": "string",
            "description": "License Steam/FiveM du joueur"
          },
          "name": {
            "type": "string",
            "description": "Nom d'utilisateur du joueur"
          },
          "money": {
            "$ref": "#/components/schemas/QBCoreMoney"
          },
          "charinfo": {
            "$ref": "#/components/schemas/QBCoreCharInfo"
          },
          "job": {
            "$ref": "#/components/schemas/QBCoreJob"
          },
          "gang": {
            "$ref": "#/components/schemas/QBCoreGang"
          },
          "position": {
            "$ref": "#/components/schemas/Position"
          },
          "metadata": {
            "$ref": "#/components/schemas/QBCoreMetadata"
          },
          "inventory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QBCoreInventoryItem"
            }
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "description": "Dernière mise à jour du personnage"
          }
        }
      },
      "QBCoreMoney": {
        "type": "object",
        "properties": {
          "cash": {
            "type": "number",
            "description": "Argent liquide"
          },
          "bank": {
            "type": "number", 
            "description": "Argent en banque"
          },
          "crypto": {
            "type": "number",
            "description": "Cryptomonnaie"
          }
        }
      },
      "QBCoreCharInfo": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "description": "Prénom"
          },
          "lastname": {
            "type": "string",
            "description": "Nom de famille"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "Date de naissance"
          },
          "nationality": {
            "type": "string",
            "description": "Nationalité"
          },
          "gender": {
            "type": "string",
            "description": "Genre"
          },
          "phone": {
            "type": "string",
            "description": "Numéro de téléphone"
          },
          "account": {
            "type": "string",
            "description": "Numéro de compte bancaire"
          },
          "cid": {
            "type": "string",
            "description": "Character ID"
          }
        }
      },
      "QBCoreJob": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du métier"
          },
          "label": {
            "type": "string",
            "description": "Libellé du métier"
          },
          "type": {
            "type": "string",
            "description": "Type de métier (leo, ems, etc.)"
          },
          "isboss": {
            "type": "boolean",
            "description": "Est-ce que le joueur est boss"
          },
          "onduty": {
            "type": "boolean",
            "description": "En service"
          },
          "grade": {
            "$ref": "#/components/schemas/JobGrade"
          },
          "payment": {
            "type": "integer",
            "description": "Salaire"
          }
        }
      },
      "QBCoreGang": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du gang"
          },
          "label": {
            "type": "string",
            "description": "Libellé du gang"
          },
          "isboss": {
            "type": "boolean",
            "description": "Est-ce que le joueur est boss du gang"
          },
          "grade": {
            "$ref": "#/components/schemas/GangGrade"
          }
        }
      },
      "JobGrade": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du grade"
          },
          "level": {
            "type": "integer",
            "description": "Niveau du grade"
          },
          "payment": {
            "type": "integer",
            "description": "Salaire du grade"
          },
          "isboss": {
            "type": "boolean",
            "description": "Grade de boss"
          }
        }
      },
      "GangGrade": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du grade de gang"
          },
          "level": {
            "type": "integer",
            "description": "Niveau du grade"
          },
          "isboss": {
            "type": "boolean",
            "description": "Grade de boss"
          }
        }
      },
      "Position": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "description": "Coordonnée X"
          },
          "y": {
            "type": "number",
            "description": "Coordonnée Y"
          },
          "z": {
            "type": "number",
            "description": "Coordonnée Z"
          }
        }
      },
      "QBCoreMetadata": {
        "type": "object",
        "properties": {
          "hunger": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Niveau de faim"
          },
          "thirst": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Niveau de soif"
          },
          "stress": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Niveau de stress"
          },
          "armor": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Niveau d'armure"
          },
          "isdead": {
            "type": "boolean",
            "description": "Le personnage est-il mort"
          },
          "ishandcuffed": {
            "type": "boolean",
            "description": "Le personnage est-il menotté"
          },
          "inlaststand": {
            "type": "boolean",
            "description": "Le personnage est-il inconscient"
          },
          "tracker": {
            "type": "boolean",
            "description": "Traceur GPS actif"
          },
          "injail": {
            "type": "integer",
            "description": "Temps restant en prison (minutes)"
          },
          "bloodtype": {
            "type": "string",
            "description": "Groupe sanguin"
          },
          "fingerprint": {
            "type": "string",
            "description": "Empreinte digitale"
          },
          "walletid": {
            "type": "string",
            "description": "ID du portefeuille"
          },
          "callsign": {
            "type": "string",
            "description": "Indicatif radio"
          },
          "licences": {
            "$ref": "#/components/schemas/Licences"
          },
          "criminalrecord": {
            "$ref": "#/components/schemas/CriminalRecord"
          },
          "phonedata": {
            "$ref": "#/components/schemas/PhoneData"
          }
        }
      },
      "Licences": {
        "type": "object",
        "properties": {
          "driver": {
            "type": "boolean",
            "description": "Permis de conduire"
          },
          "weapon": {
            "type": "boolean",
            "description": "Permis de port d'arme"
          },
          "business": {
            "type": "boolean",
            "description": "Licence d'entreprise"
          }
        }
      },
      "CriminalRecord": {
        "type": "object",
        "properties": {
          "hasRecord": {
            "type": "boolean",
            "description": "A un casier judiciaire"
          }
        }
      },
      "PhoneData": {
        "type": "object",
        "properties": {
          "SerialNumber": {
            "type": "integer",
            "description": "Numéro de série du téléphone"
          },
          "InstalledApps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Applications installées"
          }
        }
      },
      "QBCoreInventoryItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de l'objet"
          },
          "count": {
            "type": "integer",
            "description": "Quantité"
          },
          "slot": {
            "type": "integer",
            "description": "Slot dans l'inventaire"
          },
          "metadata": {
            "$ref": "#/components/schemas/ItemMetadata"
          }
        }
      },
      "ItemMetadata": {
        "type": "object",
        "properties": {
          "durability": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Durabilité de l'objet"
          },
          "ammo": {
            "type": "integer",
            "minimum": 0,
            "description": "Munitions (pour les armes)"
          },
          "serial": {
            "type": "string",
            "description": "Numéro de série"
          },
          "registered": {
            "type": "string",
            "description": "Nom du propriétaire enregistré"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Composants/accessoires"
          }
        }
      },
      "ESXCitizen": {
        "type": "object",
        "required": ["identifier", "firstname", "lastname"],
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Identifiant unique du citoyen"
          },
          "firstname": {
            "type": "string",
            "description": "Prénom du citoyen"
          },
          "lastname": {
            "type": "string",
            "description": "Nom de famille du citoyen"
          },
          "dateofbirth": {
            "type": "string",
            "format": "date",
            "description": "Date de naissance (YYYY-MM-DD)"
          },
          "sex": {
            "type": "string",
            "enum": ["m", "f"],
            "description": "Sexe du citoyen (m/f)"
          },
          "height": {
            "type": "integer",
            "description": "Taille en centimètres"
          },
          "job": {
            "type": "string",
            "description": "Métier actuel"
          },
          "job_grade": {
            "type": "integer",
            "description": "Grade du métier"
          },
          "group": {
            "type": "string",
            "description": "Groupe d'utilisateur"
          },
          "accounts": {
            "$ref": "#/components/schemas/ESXAccounts"
          },
          "inventory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ESXInventoryItem"
            }
          },
          "loadout": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ESXWeapon"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ESXMetadata"
          },
          "position": {
            "$ref": "#/components/schemas/Position"
          },
          "skin": {
            "$ref": "#/components/schemas/ESXSkin"
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ESXStatus"
            }
          },
          "is_dead": {
            "type": "boolean",
            "description": "Indique si le citoyen est mort"
          },
          "disabled": {
            "type": "boolean",
            "description": "Indique si le compte est désactivé"
          },
          "last_property": {
            "type": "string",
            "nullable": true,
            "description": "Dernière propriété visitée"
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "description": "Numéro de téléphone du citoyen"
          }
        }
      },
      "ESXAccounts": {
        "type": "object",
        "properties": {
          "money": {
            "type": "number",
            "description": "Argent liquide"
          },
          "bank": {
            "type": "number",
            "description": "Argent en banque"
          },
          "black_money": {
            "type": "number",
            "description": "Argent sale"
          }
        }
      },
      "ESXInventoryItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de l'objet"
          },
          "count": {
            "type": "integer",
            "description": "Quantité"
          },
          "slot": {
            "type": "integer",
            "description": "Slot dans l'inventaire"
          }
        }
      },
      "ESXWeapon": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom de l'arme"
          },
          "ammo": {
            "type": "integer",
            "description": "Munitions"
          }
        }
      },
      "ESXMetadata": {
        "type": "object",
        "properties": {
          "health": {
            "type": "number",
            "minimum": 0,
            "maximum": 200,
            "description": "Points de vie"
          },
          "armor": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Niveau d'armure"
          }
        }
      },
      "ESXSkin": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Modèle de personnage"
          },
          "eyeColor": {
            "type": "integer",
            "description": "Couleur des yeux"
          },
          "hair": {
            "$ref": "#/components/schemas/ESXHair"
          },
          "headBlend": {
            "$ref": "#/components/schemas/ESXHeadBlend"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ESXComponent"
            }
          },
          "props": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ESXProp"
            }
          },
          "headOverlays": {
            "type": "object",
            "description": "Superpositions faciales (maquillage, barbe, etc.)"
          },
          "faceFeatures": {
            "type": "object",
            "description": "Traits du visage"
          },
          "tattoos": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Tatouages"
          }
        }
      },
      "ESXHair": {
        "type": "object",
        "properties": {
          "style": {
            "type": "integer",
            "description": "Style de cheveux"
          },
          "color": {
            "type": "integer",
            "description": "Couleur principale"
          },
          "highlight": {
            "type": "integer",
            "description": "Couleur des mèches"
          }
        }
      },
      "ESXHeadBlend": {
        "type": "object",
        "properties": {
          "shapeFirst": {
            "type": "integer",
            "description": "Première forme de visage"
          },
          "shapeSecond": {
            "type": "integer",
            "description": "Seconde forme de visage"
          },
          "shapeMix": {
            "type": "number",
            "description": "Mélange des formes"
          },
          "skinFirst": {
            "type": "integer",
            "description": "Première couleur de peau"
          },
          "skinSecond": {
            "type": "integer",
            "description": "Seconde couleur de peau"
          },
          "skinMix": {
            "type": "number",
            "description": "Mélange des couleurs de peau"
          }
        }
      },
      "ESXComponent": {
        "type": "object",
        "properties": {
          "component_id": {
            "type": "integer",
            "description": "ID du composant vestimentaire"
          },
          "drawable": {
            "type": "integer",
            "description": "Drawable du vêtement"
          },
          "texture": {
            "type": "integer",
            "description": "Texture du vêtement"
          }
        }
      },
      "ESXProp": {
        "type": "object",
        "properties": {
          "prop_id": {
            "type": "integer",
            "description": "ID de l'accessoire"
          },
          "drawable": {
            "type": "integer",
            "description": "Drawable de l'accessoire"
          },
          "texture": {
            "type": "integer",
            "description": "Texture de l'accessoire"
          }
        }
      },
      "ESXStatus": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du statut"
          },
          "val": {
            "type": "number",
            "description": "Valeur brute"
          },
          "percent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Valeur en pourcentage"
          }
        }
      },
      "Vehicle": {
        "type": "object",
        "required": ["plate", "model"],
        "properties": {
          "plate": {
            "type": "string",
            "description": "Plaque d'immatriculation du véhicule"
          },
          "model": {
            "type": "string",
            "description": "Modèle du véhicule"
          },
          "garage": {
            "type": "string",
            "description": "Garage où est stocké le véhicule"
          },
          "state": {
            "type": "integer",
            "description": "État du véhicule (0=garage, 1=sorti, 2=fourrière)"
          },
          "fuel": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Niveau de carburant en pourcentage"
          },
          "engine": {
            "type": "number",
            "minimum": 0,
            "maximum": 1000,
            "description": "État du moteur"
          },
          "body": {
            "type": "number",
            "minimum": 0,
            "maximum": 1000,
            "description": "État de la carrosserie"
          }
        }
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32",
            "description": "Code d'erreur"
          },
          "message": {
            "type": "string",
            "description": "Message d'erreur descriptif"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "QBCore",
      "description": "Endpoints pour le framework QBCore"
    },
    {
      "name": "ESX",
      "description": "Endpoints pour le framework ESX"
    }
  ]
}